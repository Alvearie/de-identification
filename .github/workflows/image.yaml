name: Publish Release Image

on:
  workflow_dispatch:
    inputs:
      tagOrRef:
        decription: 'Release tag or branch reference'
        required: true
  release:
    types: [published, edited]

jobs:
  build_push_img:

    runs-on: ubuntu-latest

    steps:
    # Setup some useful vars
    - name: Get Release Information
      id: release_info
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        # github.event.inputs.tagOrRef is only present if manually launched
        if [ ! -z ${{ github.event.inputs.tagOrRef }} ]; then
           tag=${{ github.event.inputs.tagOrRef }}
        else
           tag=${GITHUB_REF#refs/tags/}
        fi
        echo ::set-output name=SOURCE_TAG::${tag}
        # also store tag without the leading 'v'
        if [ ${tag:0:1} == "v" ]; then
           echo ::set-output name=RAW_SOURCE_TAG::${tag:1}
        else
           echo ::set-output name=RAW_SOURCE_TAG::${tag}
        fi        
    - name: Print Release Information 
      run: |
        echo $SOURCE_NAME
        echo $SOURCE_BRANCH
        echo $SOURCE_TAG
        echo $RAW_SOURCE_TAG
      env:
        SOURCE_NAME: ${{ steps.release_info.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.release_info.outputs.SOURCE_BRANCH }}
        SOURCE_TAG: ${{ steps.release_info.outputs.SOURCE_TAG }}
        RAW_SOURCE_TAG: ${{ steps.release_info.outputs.RAW_SOURCE_TAG }}
        
    # Build Java targets
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.tagOrRef }}
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: |
        git submodule update --init --recursive && mvn -B package --file pom.xml
    - name: Sanity Test
      run: cd de-identification-app/scripts && ./sanity_test.sh

    # Build the image and publish
    - name: Build Image
      run: |
        cd de-identification-app
        docker build -f Dockerfile --build-arg RELEASE_VERSION=${{ steps.release_info.outputs.RAW_SOURCE_TAG }} -t alvearie/deid:${{ steps.release_info.outputs.SOURCE_TAG }} .
    - name: List Docker Images
      run: docker images
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Push Docker Images
      run: |
        echo docker push alvearie/deid:${{ steps.release_info.outputs.SOURCE_TAG }}
